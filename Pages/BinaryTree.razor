@page "/binarytree"

@inject BinaryTreeService BinaryTreeService

<h3>BinaryTree <span class="badge badge-info">@BinaryTreeService.Count</span></h3>

<div class="d-flex flex-row mb-1">
    <div class="p-2">
        <div class="input-group input-group">
            <div class="input-group-prepend">
                <button @onclick="Add" class="btn btn-primary" type="button">Add</button>
            </div>
            <input @bind="Value" type="text" class="form-control" placeholder="0" aria-label="" aria-describedby="basic-addon1">
        </div>
    </div>
</div>

<div class="d-flex flex-row mb-1">
    <div class="p-2">
        <div class="input-group input-group">
            <div class="input-group-prepend">
                <button @onclick="Remove" class="btn btn-warning" type="button">Remove</button>
            </div>
            <input @bind="ValueToRemove" type="text" class="form-control" placeholder="0" aria-label="" aria-describedby="basic-addon1">
        </div>
    </div>
</div>

<div class="tree">
    <ul>
        <li>
            @Fragment
        </li>
    </ul>
</div>

@code {
    //https://codepen.io/anggaand123/pen/wexprZ

    public string Value { get; set; }
    public string ValueToRemove { get; set; }
    public RenderFragment Fragment { get; set; }

    public void Add()
    {
        BinaryTreeService.Add(Value != null ? Convert.ToInt32(Value) : new Random().Next(100));
        RenderComponent();
        Value = null;
    }

    public void Remove()
    {
        BinaryTreeService.Remove(Convert.ToInt32(ValueToRemove));
        RenderComponent();
        Value = null;
    }

    public void RenderComponent()
    {
        Fragment = BinaryTreeService.GetTreeView();
    }

    protected override void OnInitialized()
    {
        RenderComponent();
    }
}
